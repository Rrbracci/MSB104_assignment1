---
title: "MSB104_assignment1"
author: "Rrbracci & AGaard01"
format: html
editor: visual
bibliography: [MSB104_Assignment1.bib]
---

```{r}
#| label: setup
#| output: false
#| message: false
#| echo: false
library(eurostat)
library(dineq)
library(tidyverse)
library(gridExtra)
library(modelr)
library(grid)
library(ggplotify)
library(vtable)
library(dplyr)
library(dineq)
```

# Sub-national GDP and GDP per Capita

## **Data Acquisition**

### Population per sub-region in DE, FI & RO

```{r}
# Downloaded file for population in DE (Germany), FI (Finland) and RO (Romania). Furthermore, we load up the file i RStudio by import the file in Library(readr). Moreover, we commended RStudio to read the file "demo_r_pjanaggr3_page_linear_csv". Additionally, we implemented the function na = "NA" for RStudio to read the missing values. Lastly, we added the function "show_col_types = FALSE" to prevent RStudio displaying the column data types while reading the file. 
library(readr)
demo_r_pjanaggr3_page_linear_csv <- read_csv("demo_r_pjanaggr3_page_linear.csv.gz", 
    na = "NA", show_col_types = FALSE)
```

```{r}
# First step was to rename the file for the assigned countries (DE, FI & RO). Furthermore, we utilized the function filter with str_sub considering a better overview of relevant dataset. Lastly, we were interested in population in every sub_regionals in the relevant contries. To receive and organise the relevant data, the function "Select" was used.  
DE_FI_RO_pop <- demo_r_pjanaggr3_page_linear_csv |>
	filter(str_sub
	       (geo, start = 1L, end = 2L) %in% c("DE", "FI", "RO")) |>
	select(Year = TIME_PERIOD, Sub_regions = geo, Population = OBS_VALUE)
```

```{r}
#| paged.print: false
# Table with overview of population per region in the countries of Germany, Finland and Romania.
DE_FI_RO_pop |> 
  print(
    n = 5 ,
    width = 100 ,
    )
```

## GDP per sub-region in DE, FI & RO

```{r}
# Downloaded file for GDP in DE (Germany), FI (Finland) and RO (Romania). Furthermore, we load up the file i RStudio by import the file in Library(readr). Moreover, we commended RStudio to read the file "nama_10r_3gdp_page_linear_csv". Additionally, we implemented the function na = "NA" for RStudio to read the missing values. Lastly, we added the function "show_col_types = FALSE" to prevent RStudio displaying the column data types while reading the file. 
library(readr)
nama_10r_3gdp_page_linear_csv <- read_csv("nama_10r_3gdp_page_linear.csv.gz", 
    na = "NA", show_col_types = FALSE)
```

```{r}
# First step was to rename the file for the assigned countries (DE, FI & RO). Furthermore, we utilized the function filter with str_sub considering a better overview of relevant dataset. Lastly, we were interested in population in every sub_regionals in the relevant contries. To receive and organise the relevant data, the function "Select" was used.  
DE_FI_RO_gdp <- nama_10r_3gdp_page_linear_csv |>
	filter(str_sub
	       (geo, start = 1L, end = 2L) %in% c("DE", "FI", "RO")) |>
	select(Year = TIME_PERIOD, Sub_regions = geo, GDP = OBS_VALUE)
```

```{r}
#| paged.print: false
# Table with overview of GPD per region in the countries of Germany, Finland and Romania.
DE_FI_RO_gdp |> 
  print(
    n = 5 ,
    width = 100 ,
    )
```

### Overview of presented datasets and structure

The first dataset we downloaded from Eurostat was **demo_r_pjanaggr3,** which contains population data from Europe.
In our case, we have selected population data from Finland, Germany and Romania.
According to @Eurostat_2021, the dataset of demography is a set of statistical numbers each country in Europe sends yearly to Eurostat by 31 December of the following calendar year.
Furthermore, the definition of "population" is, according to @Eurostat_2021, all persons having their residences in a member state, including all live births and deaths during the year when the statistical numbers are heading to Eurostat.
Moreover, the demographic data at a regional level are separated into different groups named NUTS, which are defined as nomenclature for territorial units for statistics (@Eurostat_2021).
The purpose of the NUTS function is to subdivide the territory of the European Union into 104 regions at NUTS level 1 and break it down by to 281 at NUTS level 2 and 1348 at NUTS level 3 (@Eurostat_2021).
In this paper, we have focused on the numbers of NUTS 3 level, but the dataset containing population data has been broken down by sex and broad age groups (0-14, 15-64 and 65 or more).

The following dataset we downloaded from Eurostat was the **nama_10r_3gdp dataset**.
Furthermore, this dataset is also broken down to NUTS level 3 which focus on GDP data from the sub-regions in Finland, Germany and Romania.
According to @Eurostat_2023, GDP (Gross domsetsic product) at market prices is defined as the final result of the production activity of resident producer units (@Eurostat_2023).

## **GDP per Capita Calculation**

```{r}
# Merging data
merged_data <- merge(DE_FI_RO_pop, DE_FI_RO_gdp) 
```

```{r}
# Step one: choose dataset for transformation. 
# Step two: mutate and create new column (GDP_per_capita)
merged_data <- merged_data |> 
  mutate(
    GDP_per_capita = 1000000 * GDP/Population
    )
```

```{r}
# Summary for viewing dataset. 
summary(merged_data)
```

### Calculation steps

The first step in calculating GDP per capita for each sub-region, was to merge the two datasets of GDP and population.
We named the new dataset merged_data.
Furthermore, we started with transforming the new dataset by creating a new column called GDP_per_capita.
We calculated GDP per capita by using the formula GDP divided by Population.
Lastly, we provided the summary function to get an overview of various summary statistics and information for each column in the merged_data dataset.

## Descriptive Analysis:

```{r}
GDP_DE_nuts2 <- merged_data %>%
  filter(
    str_sub(Sub_regions, start = 1L, end = 2L) == "DE"
  ) |> 
  mutate(
    id_nuts2 = str_sub(Sub_regions, start = 1L, end = 4L)
  ) |> 
  group_by(id_nuts2, Year) %>%
  summarise(
    GDP_per_capita_nuts2_DE = sum(1000000*GDP)/sum(Population)
    ) 
```

```{r}
#| cap-location: bottom
#| fig-cap: "De GNP per år."
GDP_DE_nuts2 |>
  filter(
    as.integer(str_sub(id_nuts2, start = 3L, end = 4L)) >= 0
    )  |>
  filter(
  as.integer(str_sub(id_nuts2, start = 3L, end = 4L)) < 50
  ) |> 
  ggplot(mapping = aes(
    x = Year, 
    y = GDP_per_capita_nuts2_DE, 
    colour = id_nuts2)
    ) +
  #geom_smooth(se = FALSE, snap = 0.9)
  geom_line()
```

```{r}
desc_stat_DE_nuts2 <- GDP_DE_nuts2 |> 
  group_by(Year) |> 
  summarise(
    min_GDP_each_year = min(GDP_per_capita_nuts2_DE),
    max_GDP_each_year = max(GDP_per_capita_nuts2_DE),
    median_GDP_each_year = median(GDP_per_capita_nuts2_DE),
    mean_GDP_each_year = mean(GDP_per_capita_nuts2_DE),
    sd_GDP_each_year = sd(GDP_per_capita_nuts2_DE),
    var_GDP_each_year = sd_GDP_each_year^2
  )
```

```{r}
GDP_DE_nuts2 |> 
  ungroup() |> 
  select(Year, GDP_pc = GDP_per_capita_nuts2_DE) |> 
  st(group = "Year", group.long = TRUE, 
     summ = c('notNA(x)','mean(x)', 'median(x)', 
              'sd(x)','min(x)','max(x)'),
              
     )
```

```{r}
GDP_DE_nuts2 |> 
  filter(Year == 2005) |> 
  select(-Year) |> 
  st()
```

# Regional inequity

## Literature review

Regional inequality shows variation in regional GDP per capita, and according to @Lessmann_and_Seidel_2017, regional inequality occurs when one region experiences different assumptions than other regions.
Moreover, when the level of economic development is high, there is significant regional inequality @Lessmann_and_Seidel_2017 .
According to @williamson_1965, one crucial difference that leads to regional inequality is the access to natural resources.
Regions rich in natural resources grow faster than regions in the rest of the country, which results in inequality.
Furthermore, openness is another critical element of why regional inequality occurs.
A region with more significant access to the international trade market than other regions with limited access will gain more from international trade if international trade costs decrease @Lessmann_and_Seidel_2017

Moreover, openness can also contribute to foreign investors investing in a more attractive region, e.g., access to natural resources.
In the end, this led to an imbalance in regional equality.
Additionally, mobility can provide regional inequality through differences in transport costs from one region to another @Lessmann_and_Seidel_2017. The differences in transport costs are caused, e.g. by fuel consumption per kilometre.
 

Furthermore, another significant element creating regional inequality is bureaucracy, policy and stability in a country @Lessmann_and_Seidel_2017. Civil war affects the country's balance of regional equality and creates different assumptions.
An example is regions in a country that experience increasing aid.
Receiving assistance from foreign aid organisations creates inequality.
Lastly, @Lessmann_and_Seidel_2017 state that an area where ethnic groups dominate as a minority can result in regional inequity.

Based on the research conducted by @Lessmann_and_Seidel_2017, considering regional inequities is essential since it can influence economic outcomes.
The research shows many examples of high- and low-income countries experiencing unbalanced regional development that results in income inequality @Lessmann_and_Seidel_2017.

## GINI Coefficient Calculation

```{r}
merged_data <- merged_data %>%
  mutate(
    id_nuts2 = substr(Sub_regions,1,4),
    id_nuts0 = substr(Sub_regions,1,2)
    ) %>%
  ungroup() # to remove grouping
#Gen Nuts 0 id
merged_temp <- merged_data %>%
group_by(id_nuts2, Year) %>%
#mutate(gini_n2 = gini.wtd(GDP, Population)*100000) %>%
mutate(gini_n2 = gini.wtd(GDP_per_capita)) %>%
ungroup() # to remove grouping
```

```{r}
merged_temp <- merged_temp %>%
  mutate(id_nuts2 = substr(Sub_regions, 1,4),
          id_nuts0 = substr(Sub_regions, 1,2)) %>%
select(Year, Sub_regions, Population, GDP, GDP_per_capita, id_nuts0, id_nuts2, gini_n2)
```

Nullverdier: Kan skyldes kun en enkel observasjon og derfor slår det ut i null.
Det kan også skyldes manglende data.

## Data presentation

## Discussion

```{r}
#| echo: false
# siste
```
